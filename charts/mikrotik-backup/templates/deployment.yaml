apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mikrotik-backup.fullname" . }}
  labels:
    {{- include "mikrotik-backup.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mikrotik-backup.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mikrotik-backup.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mikrotik-backup.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/mikrotik_backup.toml
              subPath: config.toml
            - name: ssh-key
              mountPath: {{ .Values.ssh.keyPath }}
              subPath: ssh-key
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{- if .Values.storage.credentials.existingSecret }}
            - name: MIKROTIK_S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storage.credentials.existingSecret }}
                  key: access-key
            - name: MIKROTIK_S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storage.credentials.existingSecret }}
                  key: secret-key
            {{- end }}
            {{- if .Values.ssh.existingSecret }}
            - name: MIKROTIK_SSH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ssh.existingSecret }}
                  key: username
            - name: MIKROTIK_SSH_KEY_PATH
              value: {{ .Values.ssh.keyPath }}
            {{- end }}
            - name: MIKROTIK_S3_BUCKET
              value: {{ .Values.storage.bucket }}
            - name: MIKROTIK_S3_ENDPOINT
              value: {{ .Values.storage.endpoint }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "mikrotik-backup.fullname" . }}-config
        - name: ssh-key
          secret:
            secretName: {{ include "mikrotik-backup.sshSecretName" . }}
            defaultMode: 0600
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
