name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git history

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install boto3 paramiko colorama tomli schedule

      - name: Generate version
        id: generate-version
        run: |
          # Get current date and format it as YYYY.MM
          CURRENT_DATE=$(date +%Y.%m)
          # Get latest tag and extract release number
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "v0.0.0")
          LATEST_RELEASE_NUMBER=$(echo "$LATEST_TAG" | cut -d '.' -f 3 | cut -d 'v' -f 2)
          # Increment release number if same month, otherwise reset to 0
          if [[ "$(date +%Y.%m)" == "$(echo "$LATEST_TAG" | cut -d '.' -f 1,2 | cut -d 'v' -f 2)" ]]; then
            RELEASE_NUMBER=$((LATEST_RELEASE_NUMBER + 1))
          else
            RELEASE_NUMBER=0
          fi
          # Set VERSION environment variable
          VERSION="v$CURRENT_DATE.$RELEASE_NUMBER"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # Update Chart.yaml with new version
          sed -i "s/^version:.*$/version: ${VERSION#v}/" charts/mikrotik-backup/Chart.yaml
          sed -i "s/^appVersion:.*$/appVersion: \"${VERSION#v}\"/" charts/mikrotik-backup/Chart.yaml

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/thekoma/mikrotik-backup:${{ env.VERSION }} .
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/thekoma/mikrotik-backup:${{ env.VERSION }}

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Chart | Push
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: mikrotik-backup
          repository: thekoma
          tag: ${{ env.VERSION }}
          app_version: ${{ env.VERSION }}
          path: charts/mikrotik-backup
          registry: ghcr.io
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          update_dependencies: 'true'

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          generate_release_notes: true